name: Unit Tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  BUILD_TYPE: RelWithDebInfo

  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]  # macos-latest - disabled at the moment. c++20 support?
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # setup build directory
      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build
        
      - name: install Ubuntu packages
        if: startsWith(matrix.os,'ubuntu')
        run: sudo apt-get update -m && sudo apt-get install gcc-10 g++-10 xorg xorg-dev libglu1-mesa-dev libalut-dev libx11-xcb-dev libxcb-xrm-dev

      # install conan
      - name: Install conan
        shell: bash
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install conan

      - name: Ubuntu - Source
        if: startsWith(matrix.os,'ubuntu')
        run: source ~/.profile

      - name: Mac - Source
        if: startsWith(matrix.os,'macos')
        run: source ~/.bash_profile

      - name: Configure CMake - Ubuntu
        if: startsWith(matrix.os,'ubuntu')
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          source ~/.profile
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        env:
          CC:   gcc-10
          CXX:  g++-10

      - name: Configure CMake - Mac/Windows
        if: startsWith(matrix.os,'macos') || startsWith(matrix.os,'windows')
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      # build the libraries
      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      # Run Tests
      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C $BUILD_TYPE
